{
 "id": "1062189",
 "text": "glTF Filename extension .gltf, .glb Internet media type model/gltf+json, model/gltf-binary Developed by Khronos Group First release 19 October 2015; 8 years ago (2015-10-19) Latest release 2.0.0 11 July 2021; 2 years ago (2021-07-11) Type of format 3D computer graphics Website khronos.org/gltf glTF is a file format for 3D models, 3D scenes, and 3D assets. It is a standard file format that can be read by many programs. A glTF file can have file extensions of .gltf (JSON/ASCII) or .glb (binary). Both .gltf and .glb files may use external resources, such as for images or mesh data. Or, both may have data embedded inside of them (as base64-encoded text in .gltf files or as raw bytes in .glb files). glTF is an open standard developed and maintained by the Khronos Group. glTF supports 3D model geometry, appearance, scene graph hierarchy, and animation. glTF is intended to be a simple, portable, and compatible format for 3D assets, reducing file size and runtime processing by apps. As such, its creators have called it the \"JPEG of 3D.\" == Overview == The glTF format stores data primarily in JSON. The binary .glb format is still JSON data, but saved as a binary blob instead of plain text. The JSON may also contain blobs of binary data known as buffers, and use external files, for storing mesh data, images, etc. The fundamental building blocks of a glTF scene are nodes. Nodes are organized into a hierarchy. Nodes may have other nodes defined as children. Nodes may have transforms relative to their parent. Nodes may use resources, such as meshes, skins, and cameras. Meshes may refer to materials, which refer to textures, which refer to images. Scenes are defined using an array of root nodes. Most of the top-level glTF properties use a flat hierarchy for storage. Nodes are saved in an array called \"nodes\", and are pointed to by index, including by other nodes. A glTF scene points to its root nodes by index. Furthermore, nodes point to meshes by index, which point to materials by index, which point to textures by index, which point to images by index. All glTF data structures can be extended using an \"extensions\" JSON property. This allows adding arbitrary JSON data to any part of the glTF. The specifics of the data are defined using an extension specification which builds on the base glTF spec. See the Extensions section for more information. == Releases == === glTF 1.0 === Members of the COLLADA working group created glTF in 2012. At SIGGRAPH 2012, Khronos showed a demo of glTF, which was then called WebGL Transmissions Format (WebGL TF). On October 19, 2015, Khronos released the glTF 1.0 specification. ==== Adoption of glTF 1.0 ==== At SIGGRAPH 2016, Oculus announced they were adopting glTF because of the similarities to their ovrscene format. In October 2016, Microsoft joined the Khronos 3D Formats working group to work together on glTF. === glTF 2.0 === glTF 2.0 was released in June 2017. glTF 2.0 was a huge change compared to version 1.0. Most tools adopted the 2.0 version. Physically based rendering (PBR) was added, replacing WebGL shaders used in glTF 1.0, thanks to a proposal by Fraunhofer at SIGGRAPH 2016. Changes were made to accessors and morph targets for facial animation. Top-level glTF object properties were replaced with arrays for faster index-based access. There were many other schema tweaks and breaking changes compared to glTF 1.0. There is ongoing work towards import and export in Unity and an integrated multi-engine viewer / validator. ==== Adoption of glTF 2.0 ==== On March 3, 2017, Microsoft announced that they will be using glTF 2.0 as the 3D asset format in their apps, including Paint 3D, 3D Viewer, Remix 3D, Babylon.js, and Microsoft Office. Sketchfab also announced support for glTF 2.0. As of 2019, the glTF and GLB formats are used by companies including DGG, UX3D, Sketchfab, Facebook, Microsoft, Oculus, Google, Adobe, Box, TurboSquid, Unreal EngineAs of Unreal 5.1: and Qt Quick 3D. The glTF format is an important standard for augmented reality because it works with Autodesk Maya, Autodesk 3ds Max, and Poly. In February 2020, the Smithsonian Institution started their Open Access Initiative, releasing approximately 2.8 million 2D images and 3D models into the public domain, using glTF for the 3D models. In July 2022, glTF 2.0 was released as the ISO/IEC 12113:2022 International Standard. Khronos said they will keep ISO/IEC 12113 updated with new glTF functionality to ensure that the ISO/IEC and Khronos specifications stay in sync. === Extensions === The glTF format can be extended with arbitrary JSON to add new data and functionality. Extensions can be placed on any part of a glTF, including nodes, animations, materials, textures, and on the entire file. Khronos keeps a list of some glTF extensions on GitHub, including all official extensions from Khronos and a few third-party extensions. * PBR extensions allow objects to look realistic, allowing developers to create 3D assets that look like real-world objects. New PBR extensions add new ways glTF objects can look. * The KTX 2.0 extension for universal texture compression allows glTF files to store images in a way similar to native texture formats. This allows glTF files to have a reduced file size and increased rendering speed. * Draco is a glTF extension for mesh compression, to compress and decompress 3D meshes. This reduces the size of glTF files. Draco compresses vertex attributes, normals, colors, and texture coordinates. * Many glTF extensions for game engine usage have been developed by OMI group. This includes extensions for physics shapes, physics bodies, physics joints, audio playback, seats, spawn points, and more. * VRM has developed glTF extensions for human-like 3D avatars including dynamic spring bones and toon materials. == Derivative formats == On August 10, 2015, 3D Tiles was built on glTF. 3D Tiles adds spatial data, metadata, and geospatial data. The geospatial data can be styled and streamed. 3D Tiles is now a proposed OGC Community Standard. VRM, a model format for VR, is built on the .glb format. It is a 3D human avatar file format. == Software ecosystem == Khronos works on the glTF Sample Viewer to view assets, as part of the glTF Software ecosystem. Khronos also works on the Validator, which validates glTF assets. glTF files can be used in many open-source WebGL engines including PlayCanvas, Three.js, Babylon.js, Cesium, PEX, xeogl, and A-Frame. The Godot game engine supports and recommends glTF files, with both import and export support. Open-source glTF converters allow converting from COLLADA, FBX, and OBJ. Assimp can import and export glTF. glTF files can be exported from many 3D editors, such as Blender, Vectary, Autodesk 3ds Max (natively or using Verge3D exporter), Autodesk Maya (using babylon.js exporter), Autodesk Inventor, Modo, Houdini, Paint 3D, Godot, and Substance Painter. Open-source glTF utility libraries are available for programming languages including JavaScript, Node.js, C++, C#, Haskell, Java, Go, Rust, Haxe, Ada, and TypeScript. 3D Commerce, a standards group for 3D content in e-commerce, uses glTF for realistic 3D assets. In June 2021, the 3D Commerce viewer certification program was launched, allowing 3D viewers to prove they can accurately and reliably display 3D products using the glTF file format. 3D Commerce's asset guidelines, released in 2020, include best practices for using glTF files in 3D Commerce. == Related pages == * JSON == References == == Other websites == * * glTF specification Category:Cross-platform software",
 "title": "GlTF"
}